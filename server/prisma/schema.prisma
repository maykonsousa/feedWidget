// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  name      String
  email     String
  password  String
  username  String
  isAdmin   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Requests Requests[]
  Videos   Videos[]
  comments Comments[]
  Likes    Likes[]
  @@map("users")
}

model Requests {
  id         String   @id @default(uuid())
  userId     String
  type       String
  message    String
  screenshot String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  User       Users    @relation(fields: [userId], references: [id])

  Comments Comments[]
  @@map("requests")
}

model Videos {
  id          String   @id @default(uuid())
  title       String
  url         String
  description String
  isPublic    Boolean
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  User        Users    @relation(fields: [userId], references: [id])

  Likes Likes[]
  @@map("videos")
}

model Comments {
  id        String   @id @default(uuid())
  userId    String
  videoId   String
  requestId String
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      Users    @relation(fields: [userId], references: [id])
  Video     Requests @relation(fields: [requestId], references: [id])

  @@map("comments")
}

model Likes {
  id        String   @id @default(uuid())
  userId    String
  videoId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      Users    @relation(fields: [userId], references: [id])
  Video     Videos   @relation(fields: [videoId], references: [id])

  @@map("likes")
}
